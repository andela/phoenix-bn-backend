{"version":3,"sources":["../../../src/routes/api/users.js"],"names":["mongoose","require","router","Router","passport","User","model","get","req","res","next","findById","payload","id","then","user","sendStatus","json","toAuthJSON","put","body","username","email","bio","image","password","setPassword","save","post","status","errors","authenticate","session","err","info","module","exports"],"mappings":"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","sourcesContent":["const mongoose = require(\"mongoose\");\nconst router = require(\"express\").Router();\nconst passport = require(\"passport\");\nconst User = mongoose.model(\"User\");\n\nrouter.get(\"/user\", function(req, res, next) {\n    User.findById(req.payload.id)\n        .then(function(user) {\n            if (!user) {\n                return res.sendStatus(401);\n            }\n            return res.json({ user: user.toAuthJSON() });\n        })\n        .catch(next);\n});\n\nrouter.put(\"/user\", function(req, res, next) {\n    User.findById(req.payload.id)\n        .then(function(user) {\n            if (!user) {\n                return res.sendStatus(401);\n            }\n\n            // only update fields that were actually passed...\n            if (typeof req.body.user.username !== \"undefined\") {\n                user.username = req.body.user.username;\n            }\n            if (typeof req.body.user.email !== \"undefined\") {\n                user.email = req.body.user.email;\n            }\n            if (typeof req.body.user.bio !== \"undefined\") {\n                user.bio = req.body.user.bio;\n            }\n            if (typeof req.body.user.image !== \"undefined\") {\n                user.image = req.body.user.image;\n            }\n            if (typeof req.body.user.password !== \"undefined\") {\n                user.setPassword(req.body.user.password);\n            }\n\n            return user.save().then(function() {\n                return res.json({ user: user.toAuthJSON() });\n            });\n        })\n        .catch(next);\n});\n\nrouter.post(\"/users/login\", function(req, res, next) {\n    if (!req.body.user.email) {\n        return res.status(422).json({ errors: { email: \"can't be blank\" } });\n    }\n\n    if (!req.body.user.password) {\n        return res.status(422).json({ errors: { password: \"can't be blank\" } });\n    }\n    passport.authenticate(\"local\", { session: false }, function(\n        err,\n        user,\n        info\n    ) {\n        if (err) {\n            return next(err);\n        }\n\n        if (user) {\n            return res.json({ user: user.toAuthJSON() });\n        } else {\n            return res.status(422).json(info);\n        }\n    })(req, res, next);\n});\n\nrouter.post(\"/users\", function(req, res, next) {\n    const user = new User();\n\n    user.username = req.body.user.username;\n    user.email = req.body.user.email;\n    user.setPassword(req.body.user.password);\n\n    user.save()\n        .then(function() {\n            return res.json({ user: user.toAuthJSON() });\n        })\n        .catch(next);\n});\n\nmodule.exports = router;\n"],"file":"users.js"}